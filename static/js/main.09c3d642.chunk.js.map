{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","intervalId","this","window","setInterval","forceUpdate","console","info","Date","toUTCString","slice","clearInterval","name","props","currentTime","className","Component","getRandomName","value","now","toString","App","timerId","state","hasClock","clockName","handleContextMenu","event","preventDefault","stopClock","handleLeftClick","button","startClock","setState","newClockName","updatedClockName","debug","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAMaA,EAAb,4MACUC,WAA4B,KADtC,uDAeE,WAAqB,IAAD,OAClBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,cAELC,QAAQC,MAAK,IAAIC,MAAOC,cAAcC,OAAO,IAAK,MACjD,OApBP,kCAuBE,WAC0B,OAApBR,KAAKD,YACPE,OAAOQ,cAAcT,KAAKD,cAzBhC,oBA6BE,WACE,IAAQW,EAASV,KAAKW,MAAdD,KACFE,GAAc,IAAIN,MAAOC,cAAcC,OAAO,IAAK,GAOzD,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAEF,YACD,sBAAMG,UAAU,cAAhB,SACGD,WA7CX,GAA2BE,aCF3B,SAASC,IACP,IAAMC,EAAQV,KAAKW,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACUC,QAAyB,KADnC,EAGEC,MAAkB,CAChBC,UAAU,EACVC,UAAW,WALf,EAqBEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,aAvBT,EA0BEC,gBAAkB,SAACH,GACI,IAAjBA,EAAMI,QACR,EAAKC,cA5BX,EAgCEH,UAAY,WACW,OAAjB,EAAKP,UACPnB,OAAOQ,cAAc,EAAKW,SAC1B,EAAKA,QAAU,MAGjB,EAAKW,SAAS,CAAET,UAAU,KAtC9B,EAyCEQ,WAAa,WACX,GAAqB,OAAjB,EAAKV,QAAkB,CACzB,IAAMY,EAAejB,IAErB,EAAKK,QAAUnB,OAAOC,aAAY,WAChC,IAAM+B,EAAmBlB,IAGzBX,QAAQ8B,MAAR,uBAA8BF,EAA9B,eAAiDC,IACjD,EAAKF,SAAS,CAAER,UAAWU,MAC1B,MAEH,EAAKF,SAAS,CACZT,UAAU,EACVC,UAAWS,MAvDnB,uDAQE,WAA2B,IAAD,OACxBhC,KAAKoB,QAAUnB,OAAOC,aAAY,WAChC,IAAM8B,EAAejB,IAGrBX,QAAQ8B,MAAR,uBAA8B,EAAKb,MAAME,UAAzC,eAAyDS,IACzD,EAAKD,SAAS,CAAER,UAAWR,QAC1B,MAEHoB,SAASC,iBAAiB,cAAepC,KAAKwB,mBAC9CW,SAASC,iBAAiB,QAASpC,KAAK4B,mBAlB5C,oBA4DE,WACE,MAAgC5B,KAAKqB,MAA7BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECS,GACI,cAAC,EAAD,CAAOZ,KAAMa,WApE1B,GAAyBT,aCZzBuB,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.09c3d642.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface ClockProps {\n  name: string;\n}\n\nexport class Clock extends Component<ClockProps> {\n  private intervalId: number | null = null;\n\n  // componentDidMount() {\n  //   this.intervalId = window.setInterval(() => {\n  //     const currentUtcTime = new Date();\n\n  //     currentUtcTime.setHours(currentUtcTime.getHours() + 2);\n\n  //     this.forceUpdate();\n  //     // eslint-disable-next-line no-console\n  //     console.info(currentUtcTime.toUTCString().slice(-12, -4));\n  //   }, 1000);\n  // }\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      this.forceUpdate();\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.intervalId !== null) {\n      window.clearInterval(this.intervalId);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n    const currentTime = new Date().toUTCString().slice(-12, -4);\n    // const currentUtcTime = new Date();\n\n    // currentUtcTime.setHours(currentUtcTime.getHours() + 2);\n\n    // const currentTime = currentUtcTime.toUTCString().slice(-12, -4);\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends Component<{}, AppState> {\n  private timerId: number | null = null;\n\n  state: AppState = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${this.state.clockName} to ${newClockName}`);\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  handleContextMenu = (event: MouseEvent): void => {\n    event.preventDefault();\n    this.stopClock();\n  };\n\n  handleLeftClick = (event: MouseEvent): void => {\n    if (event.button === 0) {\n      this.startClock();\n    }\n  };\n\n  stopClock = (): void => {\n    if (this.timerId !== null) {\n      window.clearInterval(this.timerId);\n      this.timerId = null;\n    }\n\n    this.setState({ hasClock: false });\n  };\n\n  startClock = (): void => {\n    if (this.timerId === null) {\n      const newClockName = getRandomName();\n\n      this.timerId = window.setInterval(() => {\n        const updatedClockName = getRandomName();\n\n        // eslint-disable-next-line no-console\n        console.debug(`Renamed from ${newClockName} to ${updatedClockName}`);\n        this.setState({ clockName: updatedClockName });\n      }, 3300);\n\n      this.setState({\n        hasClock: true,\n        clockName: newClockName,\n      });\n    }\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n          && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}