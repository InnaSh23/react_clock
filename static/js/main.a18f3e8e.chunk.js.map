{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","intervalId","this","window","setInterval","forceUpdate","console","info","Date","toUTCString","slice","prevProps","oldName","name","currentName","props","debug","clearInterval","currentTime","className","Component","getRandomName","value","now","toString","App","state","hasClock","clockName","timerId","handleContextMenu","event","preventDefault","stopClock","handleLeftClick","startClock","setState","document","addEventListener","removeEventListener","React","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,WAAa,EADf,uDAGE,WAAqB,IAAD,OAClBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,cAELC,QAAQC,MAAK,IAAIC,MAAOC,cAAcC,OAAO,IAAK,MACjD,OARP,gCAWE,SAAmBC,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAcZ,KAAKa,MAAMF,KAE3BC,IAAgBF,GAElBN,QAAQU,MAAR,uBAA8BJ,EAA9B,eAA4CE,MAjBlD,kCAqBE,WACEX,OAAOc,cAAcf,KAAKD,cAtB9B,oBAyBE,WACE,IAAQY,EAASX,KAAKa,MAAdF,KACFK,GAAc,IAAIV,MAAOC,cAAcC,OAAO,IAAK,GAEzD,OACE,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGN,IAEF,YACD,sBAAMM,UAAU,cAAhB,SACGD,WApCX,GAA2BE,aCF3B,SAASC,IACP,IAAMC,EAAQd,KAAKe,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAQX,IAAMG,EAAb,4MACEC,MAAkB,CAChBC,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,EAkCEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,aApCT,EAuCEC,gBAAkB,WAChB,EAAKC,cAxCT,EA2CEF,UAAY,WACV,EAAKG,SAAS,CAAET,UAAU,KA5C9B,EA+CEQ,WAAa,WACX,EAAKC,SAAS,CAAET,UAAU,KAhD9B,uDAQE,WAA2B,IAAD,OACxBzB,KAAK2B,QAAU1B,OAAOC,aAAY,WAChC,EAAKgC,SAAS,CAAER,UAAWP,QAC1B,MAEHgB,SAASC,iBAAiB,cAAepC,KAAK4B,mBAC9CO,SAASC,iBAAiB,QAASpC,KAAKgC,mBAd5C,kCA2BE,WACE/B,OAAOc,cAAcf,KAAK2B,SAE1BQ,SAASE,oBAAoB,cAAerC,KAAK4B,mBACjDO,SAASE,oBAAoB,QAASrC,KAAKgC,mBA/B/C,oBAmDE,WACE,IAAQP,EAAazB,KAAKwB,MAAlBC,SAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GACI,cAAC,EAAD,CAAOd,KAAMX,KAAKwB,MAAME,mBA3DrC,GAAyBY,IAAMpB,WCZ/BqB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.a18f3e8e.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface ClockProps {\n  name: string;\n}\n\nexport class Clock extends Component<ClockProps> {\n  intervalId = 0;\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      this.forceUpdate();\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: ClockProps): void {\n    const oldName = prevProps.name;\n    const currentName = this.props.name;\n\n    if (currentName !== oldName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.intervalId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const currentTime = new Date().toUTCString().slice(-12, -4);\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state: AppState = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  // componentDidUpdate(prevState: AppState): void {\n  //   const oldName = prevState.clockName;\n  //   const currentName = this.state.clockName;\n\n  //   if (oldName !== undefined && currentName !== oldName) {\n  //     // eslint-disable-next-line no-console\n  //     console.debug(`Renamed from ${oldName} to ${currentName}`);\n  //   }\n  // }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  handleContextMenu = (event: MouseEvent): void => {\n    event.preventDefault();\n    this.stopClock();\n  };\n\n  handleLeftClick = () => {\n    this.startClock();\n  };\n\n  stopClock = (): void => {\n    this.setState({ hasClock: false });\n  };\n\n  startClock = (): void => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n          && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}